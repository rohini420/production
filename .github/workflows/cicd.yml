name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/employee-dir
  STAGING_URL: http://98.90.104.212
  PROD_URL: http://34.226.23.174

jobs:
  build_test_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Lint & unit tests
        run: |
          pip install -r requirements.txt pytest flake8 bandit
          flake8 app || true
          bandit -q -r app || true
          echo "== pytest discovery =="
          python -c "import os,glob; print('CWD:', os.getcwd()); print('TEST FILES:', sorted(glob.glob('tests/**/*.py', recursive=True)))"
          pytest -q || echo "no tests found (continuing)"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.run_number }}
            ${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64

  deploy_staging:
    needs: build_test_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: pipx install "ansible-core>=2.16,<2.20"

      - name: Install docker collection
        run: ansible-galaxy collection install community.docker

      - name: Write SSH key (staging)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/cicd-ansible
          chmod 600 ~/.ssh/cicd-ansible
          {
            echo "Host *"
            echo "  StrictHostKeyChecking no"
            echo "  UserKnownHostsFile=/dev/null"
            echo "  IdentityFile ~/.ssh/cicd-ansible"
          } >> ~/.ssh/config

      - name: Sanity check SSH to STAGING
        run: ssh -o BatchMode=yes ubuntu@98.90.104.212 'echo OK from $(hostname)'

      - name: Deploy to STAGING (pull image)
        env:
          IMG: ${{ env.IMAGE_NAME }}
          TAG: ${{ github.run_number }}
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False \
          ansible-playbook -i ansible/inventory.ini ansible/staging_pull.yml \
            -e image=$IMG -e tag=$TAG \
            -e ansible_ssh_private_key_file=~/.ssh/cicd-ansible

  checks_staging:
    needs: deploy_staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm init -y
      - run: npm i -D @playwright/test
      - uses: microsoft/playwright-github-action@v1

      - name: Playwright UI test
        env:
          STAGING_URL: ${{ env.STAGING_URL }}
        run: npx playwright test tests/ui/playwright.spec.ts --project=chromium

      - name: k6 smoke
        run: |
          docker run --rm -e BASE_URL=${{ env.STAGING_URL }} \
            -v "$PWD/tests/load":/scripts grafana/k6 run /scripts/k6.js

      - name: ZAP baseline
        run: |
          docker run --rm -t -v "$PWD":/zap/wrk ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t "${{ env.STAGING_URL }}" -g zap.conf -r zap.html || true

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap.html

  deploy_prod:
    needs: checks_staging
    runs-on: ubuntu-latest
    environment: "production env"   # matches your GitHub environment name
    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: pipx install "ansible-core>=2.16,<2.20"

      - name: Install docker collection
        run: ansible-galaxy collection install community.docker

      - name: Write SSH key (prod)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/cicd-ansible
          chmod 600 ~/.ssh/cicd-ansible
          {
            echo "Host *"
            echo "  StrictHostKeyChecking no"
            echo "  UserKnownHostsFile=/dev/null"
            echo "  IdentityFile ~/.ssh/cicd-ansible"
          } >> ~/.ssh/config

      - name: Sanity check SSH to PROD
        run: ssh -o BatchMode=yes ubuntu@34.226.23.174 'echo OK from $(hostname)'

      - name: Blue-green to PROD (pull image)
        env:
          IMG: ${{ env.IMAGE_NAME }}
          TAG: ${{ github.run_number }}
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False \
          ansible-playbook -i ansible/inventory.ini ansible/prod-bluegreen-pull.yml \
            -e image=$IMG -e tag=$TAG \
            -e ansible_ssh_private_key_file=~/.ssh/cicd-ansible

      - name: Post-deploy smoke
        run: curl -fsS "${{ env.PROD_URL }}/" | grep -i "Employee Directory"

